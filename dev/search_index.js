var documenterSearchIndex = {"docs":
[{"location":"Scenario3/Evaluation_Scenario_3/#Evaluation-Scenario-3","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"","category":"section"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"using EasyModelAnalysis, LinearAlgebra, CSV\nusing Catlab, AlgebraicPetri\nusing Catlab.CategoricalAlgebra","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/#Question-1","page":"Evaluation Scenario 3","title":"Question 1","text":"","category":"section"},{"location":"Scenario3/Evaluation_Scenario_3/#Setup-Model","page":"Evaluation Scenario 3","title":"Setup Model","text":"","category":"section"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"Begin with a basic SIR model without vital dynamics. Calibrate the model parameters using data on cases during the ‘training period’. Then evaluate the model during the out-of-sample ‘test period’.","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"To get started with the code, we implemented the basic SIR without vital dynamics directly in ModelingToolkit.jl. This is a version that was written by an epidemiologist at Microsoft Pandemic, Simon Frost, who has become a fan of the TA3 automated simulation tools and wrote an entire repository of tutorials for this software. It is found at https://github.com/epirecipes/sir-julia.","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"In there is an SIR without vital dynamics which we took in full.","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"sir = read_json_acset(LabelledPetriNet, \"sir.json\")\nsys = ODESystem(sir)\nsys = complete(sys)\n@unpack S, I, R, inf, rec = sys\n@parameters N = 1\nparam_sub = [\n    inf => inf / N\n]\nsys = substitute(sys, param_sub)\ndefs = ModelingToolkit.defaults(sys)\ndefs[S] = 990\ndefs[I] = 10\ndefs[R] = 0.0\ndefs[N] = sum(x->defs[x], (S, I, R))\ndefs[inf] = 0.5\ndefs[rec] = 0.25\ntspan = (0.0, 40.0)\nprob = ODEProblem(sys, [], tspan);\nsol = solve(prob);","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"plot(sol)","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/#Perform-Model-Calibration","page":"Evaluation Scenario 3","title":"Perform Model Calibration","text":"","category":"section"},{"location":"Scenario3/Evaluation_Scenario_3/#Model-Calibration-Unit-Test","page":"Evaluation Scenario 3","title":"Model Calibration Unit Test","text":"","category":"section"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"As a unit test of the model calibration tools, we generated data at the default parameters, then ran the global optimization, to see how well the parameters were recovered.","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"dataset = solve(prob, saveat = 0.1)\nt_train = dataset.t[1:201]\nt_test = dataset.t[202:end]\ndata_train = [S => dataset[S][1:201], I => dataset[I][1:201], R => dataset[R][1:201]]\ndata_test = [S => dataset[S][202:end], I => dataset[I][202:end], R => dataset[R][202:end]]","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"fitparams = global_datafit(prob, [inf => [0.2, 2.0], rec => [0.05, 0.5]],\n                           t_train, data_train)","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"This then gives the forecasts in the test data:","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"_prob = remake(prob, p = fitparams)\nsol = solve(_prob, saveat = t_test);\nplot(sol, idxs = S)\nplot!(t_test, data_test[1][2])","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"plot(sol, idxs = I)\nplot!(t_test, data_test[2][2])","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"plot(sol, idxs = R)\nplot!(t_test, data_test[3][2])","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"This looks very good and matches the original data, confirming that the inverse problem functionality is functional.","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"Now we train on data from June 1 2021 to September 30 2021.","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/#Application-to-Real-Data-from-TA1","page":"Evaluation Scenario 3","title":"Application to Real Data from TA1","text":"","category":"section"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"using CSV, DataFrames, Downloads\n\n# Infectious/Recovered day by day:\nurl = \"https://raw.githubusercontent.com/DARPA-ASKEM/program-milestones/data-h-d-breakdown/6-month-milestone/evaluation/scenario_3/ta_4/usa-IRDVHN_age_HD_breakdown.csv\"\nfile = CSV.File(Downloads.download(url))\ndf_raw = DataFrame(file)\n\nstart_train = 171\nstop_train = 171+121\nstart_test = 171+122\nstop_test = 171+122+92\n\ndf_train = df_raw[start_train:stop_train, :]\ndf_test = df_raw[start_test:stop_test, :]\n\nt_train = collect(0:(size(df_train, 1)-1))\nt_test = collect(0:(size(df_test, 1)-1))\n\nN_total = 334998398 # assumed to be constant from (https://github.com/DARPA-ASKEM/program-milestones/blob/main/6-month-milestone/evaluation/scenario_3/ta_1/usa-2021-population-age-stratified.csv)\n#S = N_total - R - I\ndata_train = [S => N_total .- df_train.I .-  df_train.R, I => df_train.I, R => df_train.R]\ndata_test = [S => N_total .- df_test.I .- df_test.R, I => df_test.I, R => df_test.R]\n\nu0s = [S => N_total - df_train.I[1] - df_train.R[1], I => df_train.I[1], R => df_train.R[1]]\n_prob = remake(prob, u0 = u0s, tspan = (t_train[1], t_train[end]), p = [N => N_total])\n\nfitparams = global_datafit(_prob, [inf => [0, 1.0], rec => [0.0, 1.0]], t_train, data_train, maxiters = 1_000_000)","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"# Plot training fit\n_prob_train = remake(_prob, p = fitparams)\nsol = solve(_prob_train, saveat = t_train);","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"plot(map(datatrain) do (var, num)     plot(sol, idxs = var)     plot!(ttrain, num) end..., dpi = 300)","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"@example evalscenario3 savefig(\"trainfitS3_Q1.png\")","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"\n#### Why is that the best fit?\n\nAt first glance it may look like the system was incorrect, i.e. that it did not find the global optima for this problem.\nHowever, upon further inspection we can show that this is truly the global optima. To see this, we have to inspect\nagainst the \"intuitive\" solution. The intuitive solution would be to simply place the peak of the infections at the\nright spot.\n","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"@example evalscenario3 probtrain = remake(prob, p = [inf => 0.363, rec => 0.29]) sol = solve(probtrain, saveat = ttrain); plot(sol, idxs = I) plot!(ttrain, datatrain[2][2], lab = \"I_train\")","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"\nHowever, if we check the L2 loss of this fit we will see it's a lot higher.\n","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"@example evalscenario3 EasyModelAnalysis.l2loss([0.363, 0.29],(prob, pkeys, ttrain, data_train))","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"@example evalscenario3 EasyModelAnalysis.l2loss([fitparams[1][2],fitparams[2][2]],(prob, pkeys, ttrain, data_train))","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"\nThe reason for this is because the fits of \"making the infected maximum have the correct peak\" forces the susceptible\npopulation to be far off. This then introduces a much larger total error.\n","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"@example evalscenario3 probtrain = remake(prob, p = [inf => 0.363, rec => 0.29]) sol = solve(probtrain, saveat = ttrain); plot(sol, idxs = S) plot!(ttrain, datatrain[1][2], lab = \"S_train\")","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"@example evalscenario3 probtrain = remake(prob, p = [inf => 0.363, rec => 0.29]) sol = solve(probtrain, saveat = ttrain); plot(sol, idxs = R) plot!(ttrain, datatrain[2][2], lab = \"R_train\")","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"\nThe reason that it is off is because the onset of this pandemic has a delay, i.e. it is flat for a bit before taking off.\nThat cannot be the case for the SIR model. If `inf > rec`, then the onset of the pandemic is at time zero.\n\nThis motivates fitting in terms of not the L2 norm but the relative L2 norm, i.e. with values weighted in terms of the \nrelative size of S. This would make the much larger values of S not dominate the overall loss due to the relative\ndifference in units.\n","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"@example evalscenario3 fitparams = globaldatafit(prob, [inf => [0, 1.0], rec => [0.0, 1.0]], ttrain, datatrain,                             maxiters = 1000000, loss = EasyModelAnalysis.relative_l2loss)","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"\nwhich makes no substantial difference to the result. This is because the \"intuitive solution\" is also worse in terms\nof relative loss:\n","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"@example evalscenario3 EasyModelAnalysis.relativel2loss([0.363, 0.29],(prob, pkeys, ttrain, datatrain))","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"@example evalscenario3 EasyModelAnalysis.relativel2loss([fitparams[1][2],fitparams[2][2]],(prob, pkeys, ttrain, datatrain))","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"\nIn other words, while one may wish to fit the infected spike, doing so would cause the susceptible and recovered values\nto be so far off that it leads to more error than a bad fit of the infected. The SIR model is simply not a good fit\nto this data.\n\n### SIR Forecasting Plots\n\nDemonstrated are the forecasts with the best fitting SIR parameters\n","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"@example evalscenario3","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/#Plot-testing-fit","page":"Evaluation Scenario 3","title":"Plot testing fit","text":"","category":"section"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"u0s = [S => Ntotal - dftest.I[1] - dftest.R[1], I => dftest.I[1], R => dftest.R[1]] _probtest = remake(prob, p = fitparams, u0=u0s, tspan = (ttest[1], ttest[end])) sol = solve(probtest, saveat = ttest);","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"plot(map(datatest) do (var, num)     plot(sol, idxs = var)     plot!(ttest, num) end..., dpi = 300)","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"@example evalscenario3 savefig(\"testfitS3_Q1.png\")","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"\n## Question 2: Add Hospitalizations and Deaths\n\nThis expands the original SIR model to explore a model space comprising SIRD, SIRH, and SIRHD.\n","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"@example evalscenario3 sird = readjsonacset(LabelledPetriNet,\"sird.json\") sirh = readjsonacset(LabelledPetriNet,\"sirh.json\") sirhd = readjsonacset(LabelledPetriNet,\"sirhd.json\") sirhdsys = ODESystem(sirhd) sirhdsys = complete(sirhdsys) @unpack S, I, R, H, D, inf, rec, ideath, death, hosp, hrec = sirhdsys @parameters N = 1 paramsub = [     inf => inf / N ] sirhdsys = substitute(sirhdsys, paramsub) defs = ModelingToolkit.defaults(sirhdsys) defs[S] = Ntotal - 10 defs[I] = 10 defs[H] = 0 defs[D] = 0 defs[R] = 0.0 defs[N] = Ntotal defs[inf] = 0.5 defs[rec] = 0.25 defs[ideath] = 0.25 defs[death] = 0.25 defs[hosp] = 0.25 defs[hrec] = 0.25 tspan = (0.0, 40.0) sirhdprob = ODEProblem(sirhdsys, [], tspan) sirhdsol = solve(sirhdprob) plot(sirhdsol)","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"\nQuestion 2 involves doing the same analysis as question one but on the SIR model with hospitalizations and deaths included.\n\n#### Model Calibration\n","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"@example evalscenario3 datatrain = [ S => Ntotal .- dftrain.I .-  dftrain.R .- dftrain.D .- dftrain.H, I => dftrain.I, R => dftrain.R, H => dftrain.H, D => dftrain.D ] datatest = [ S => Ntotal .- dftest.I .-  dftest.R .- dftest.D .- dftest.H, I => dftest.I, R => dftest.R, H => dftest.H, D => dftest.D ]","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"u0s = [ S => Ntotal - dftrain.I[1] - dftrain.R[1] - dftrain.H[1] - dftrain.D[1], I => dftrain.I[1], R => dftrain.R[1], H => dftrain.H[1], D => dftrain.D[1] ] _prob2 = remake(sirhdprob, u0 = u0s, tspan = (ttrain[1], ttrain[end]), p = [N => N_total])","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"parambounds = [     inf => [0.0, 1.0]     rec => [0.0, 1.0]     death => [0.0, 5.0]     ideath => [0.0, 5.0]     hosp => [0.0, 5.0]     hrec => [0.0, 5.0] ] fitparams2 = globaldatafit(prob2, parambounds, ttrain, datatrain,                              maxiters = 500000, loss = EasyModelAnalysis.relativel2loss)","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"@example evalscenario3","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/#Plot-training-fit","page":"Evaluation Scenario 3","title":"Plot training fit","text":"","category":"section"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"prob2train = remake(prob2, p = fitparams2) sol = solve(prob2train, saveat = ttrain); plot(map(datatrain) do (var, num)     plot(sol, idxs = var)     plot!(ttrain, num) end..., dpi = 300)","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"@example evalscenario3 savefig(\"trainfitS3_Q2.png\")","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"@example evalscenario3 u0s = [ S => Ntotal - dftest.I[1] - dftest.R[1] - dftest.H[1] - dftest.D[1], I => dftest.I[1], R => dftest.R[1], H => dftest.H[1], D => dftest.D[1] ] _prob2test = remake(prob2, p = fitparams2, u0=u0s, tspan = (ttest[1], ttest[end])) sol = solve(prob2test, saveat = ttest); plot(map(datatest) do (var, num)     plot(sol, idxs = var)     plot!(ttest, num) end..., dpi = 300)","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"@example evalscenario3 savefig(\"testfitS3_Q2.png\")","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"\n### Evaluate Model Forecasts\n\nIn order to evaluate the model forecasts, we developed a functional which does the forecasting part with multiple models\nand puts a score on the forecast result. This score is calculated using the L2 norm.\n","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"@example evalscenario3 norm(solve(prob, saveat = ttest)[S] - datatest[1][2]) + norm(solve(prob, saveat = ttest)[I] - datatest[2][2]) + norm(solve(prob, saveat = ttest)[R] - data_test[3][2])","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"@example evalscenario3 norm(solve(prob2, saveat = ttest)[S] - datatest[1][2]) + norm(solve(prob2, saveat = ttest)[I] - datatest[2][2]) + norm(solve(prob2, saveat = ttest)[R] - datatest[3][2]) + norm(solve(prob2, saveat = ttest)[H] - datatest[4][2]) + norm(solve(prob2, saveat = ttest)[D] - data_test[5][2])","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"\n## Question 3: Add Vaccinations\n\nThis expands the previous SIRHD model to add vaccination.","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"@example evalscenario3 using ModelingToolkit.Symbolics: variable using ModelingToolkit: toparam sirhdvax = readjsonacset(LabelledPetriNet, \"sirhdvax.json\") sirhdvaxsys = structuralsimplify(ODESystem(sirhdvax)) sirhdvaxsys = complete(sirhdvaxsys) names = string.(ModelingToolkit.getname.(states(sirhdvaxsys))) stsnames = Symbol.(getindex.(names, 6), :, getindex.(names, 11)) @variables t @parameters N sts = map(n->variable(n, T = SymbolicUtils.FnType)(t), stsnames) names = split.(string.(parameters(sirhdvaxsys)), \"\\\"\") psnames = Symbol.(getindex.(split.(getindex.(names, 3), \"\\\"), 1), :,                    getindex.(split.(getindex.(names, 5), \"\\\"), 1)) ps = map(n->toparam(variable(n)), psnames) nps = findall(x->occursin(\"inf\", string(x)), ps) ups = findall(x->!occursin(\"inf\", string(x)), ps) subs = [     parameters(sirhdvaxsys)[nps] .=> ps[nps] ./ N     parameters(sirhdvaxsys)[ups] .=> ps[ups]     states(sirhdvaxsys) .=> sts ] sirhdvaxsys = substitute(sirhdvaxsys, subs) @unpack SU, IU, RU, HU, DU, SV, IV, RV, HV, DV = sirhdvaxsys S, I, R, H, D = SU, IU, RU, HU, DU Sv, Iv, Rv, Hv, Dv = SV, IV, RV, HV, DV @unpack idvax, infinfuu, infinfuv, hospid, ideathid, recid, hrecid, deathid, infinfvu, infinfvv = sirhdvaxsys sys3 = sirhdvaxsys prob3 = ODEProblem(sys3, nothing, (0, 1.0))","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"\nQuestion 3 is the same analysis as questions 1 and 2 done on a model with vaccination added. In order to build unit tests for\nthe analysis and functionality, we started by building the model with vaccine by hand, awaiting a swap to the version from\nTA2.\n\n#### Model Calibration\n","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"@example evalscenario3 datatrain = [(S+Sv) => Ntotal .- dftrain.I .-  dftrain.R .- dftrain.H .-  dftrain.D,                 (I+Iv) => dftrain.I, (R+Rv) => dftrain.R, H => dftrain.Hunvac, Hv => dftrain.Hvac, D => dftrain.Dunvac, Dv => dftrain.Dvac] datatest = [(S+Sv) => Ntotal .- dftest.I .-  dftest.R .- dftest.H .-  dftest.D,               Sv => 0,                 (I+Iv) => dftest.I, (R+Rv) => dftest.R, H => dftest.Hunvac, Hv => dftest.Hvac, D => dftest.Dunvac, Dv => dftest.Dvac]","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"vacrate = dftrain.Hvac[1]/(dftrain.Hvac[1]+dftrain.H_unvac[1])","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/#%-of-hospitalizations-are-vaccinated,-we-do-not-have-data-for-vaccination-rates-for-other-compartments,","page":"Evaluation Scenario 3","title":"52% of hospitalizations are vaccinated, we do not have data for vaccination rates for other compartments,","text":"","category":"section"},{"location":"Scenario3/Evaluation_Scenario_3/#so-we-assume-that-the-vaccination-rate-is-the-same-for-all-compartments.","page":"Evaluation Scenario 3","title":"so we assume that the vaccination rate is the same for all compartments.","text":"","category":"section"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"@example evalscenario3 u0s = [S => (1-vacrate)*(Ntotal-dftrain.I[1]-dftrain.R[1]-dftrain.H[1]-dftrain.D[1]),        I => (1-vacrate) * dftrain.I[1],        R => (1-vacrate) * dftrain.R[1],        H => dftrain.Hunvac[1],        D => dftrain.Dunvac[1],        Sv => vacrate*(Ntotal-dftrain.I[1]-dftrain.R[1]-dftrain.H[1]-dftrain.D[1]),        Iv => vacrate * dftrain.I[1],        Rv => vacrate * dftrain.R[1],        Hv => dftrain.Hvac[1],        Dv => dftrain.Dvac[1]        ] prob3 = remake(prob3, u0 = u0s, tspan = (ttrain[1], ttrain[end]), p = [ps .=> 0.1; N => Ntotal])","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"fitparams3 = globaldatafit(prob3, ps .=> ([0, 5.0],), ttrain, datatrain,                              maxiters = 200000, loss = EasyModelAnalysis.relativel2loss)","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"@example evalscenario3 u0s = [S => (1-vacrate)*(Ntotal-dftrain.I[1]-dftrain.R[1]-dftrain.H[1]-dftrain.D[1]),        I => (1-vacrate) * dftrain.I[1],        R => (1-vacrate) * dftrain.R[1],        H => dftrain.Hunvac[1],        D => dftrain.Dunvac[1],        Sv => vacrate*(Ntotal-dftrain.I[1]-dftrain.R[1]-dftrain.H[1]-dftrain.D[1]),        Iv => vacrate * dftrain.I[1],        Rv => vacrate * dftrain.R[1],        Hv => dftrain.Hvac[1],        Dv => dftrain.Dvac[1]        ] prob3 = remake(prob3, p = fitparams3, u0=u0s, tspan = (ttrain[1], ttrain[end])) sol = solve(prob3, saveat = ttrain); plot(map(datatrain) do (var, num)     plot(sol, idxs = [var])     plot!(ttrain, num) end...)","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"@example evalscenario3 u0s = [S => (1-vacrate)*(Ntotal-dftest.I[1]-dftest.R[1]-dftest.H[1]-dftest.D[1]),        I => (1-vacrate) * dftest.I[1],        R => (1-vacrate) * dftest.R[1],        H => dftest.Hunvac[1],        D => dftest.Dunvac[1],        Sv => vacrate*(Ntotal-dftest.I[1]-dftest.R[1]-dftest.H[1]-dftest.D[1]),        Iv => vacrate * dftest.I[1],        Rv => vacrate * dftest.R[1],        Hv => dftest.Hvac[1],        Dv => dftest.Dvac[1]        ] prob3 = remake(prob3, p = fitparams3, u0=u0s, tspan = (ttest[1], ttest[end])) sol = solve(prob3, saveat = ttest); plot(map(datatest) do (var, num)     plot(sol, idxs = [var])     plot!(ttest, num) end...)","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"\n## Question 4: Age-Stratified Model\n\n## Question 5: Add Reinfection\n\nQuestion 5 is the same analysis as questions 1, 2, 3, and 4 on a model with\nreinfection added. We will use SIRHD with reinfection.\n","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"@example evalscenario3 sirhd = readjsonacset(LabelledPetriNet, \"sirhdrenew.json\") sirhdsys = ODESystem(sirhd) sirhdsys = complete(sirhdsys) @unpack S, I, R, H, D, inf, rec, ideath, death, hosp, hrec, renew = sirhdsys @parameters N = 1 paramsub = [     inf => inf / N ] sirhdsys = substitute(sirhdsys, paramsub) defs = ModelingToolkit.defaults(sirhdsys) defs[S] = 100 - 10 defs[I] = 10 defs[H] = 0 defs[D] = 0 defs[R] = 0.0 defs[N] = 100 defs[inf] = 0.5 defs[rec] = 0.25 defs[ideath] = 0.25 defs[death] = 0.25 defs[hosp] = 0.25 defs[hrec] = 0.25 defs[renew] = 0.25 tspan = (0.0, 40.0) sirhdprob = ODEProblem(sirhdsys, [], tspan) sirhdsol = solve(sirhdprob) plot(sirhd_sol)","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"\n#### Model Calibration\n","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"@example evalscenario3 starttrain = 171 stoptrain = 171+213 starttest = 171+214 stoptest = 171+214+151","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"dftrain = dfraw[starttrain:stoptrain, :] dftest = dfraw[starttest:stoptest, :]","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"ttrain = collect(0:(size(dftrain, 1)-1)) ttest = collect(0:(size(dftest, 1)-1))","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"datatrain = [ S => Ntotal .- dftrain.I .-  dftrain.R .- dftrain.D .- dftrain.H, I => dftrain.I, R => dftrain.R, H => dftrain.H, D => dftrain.D ] datatest = [ S => Ntotal .- dftest.I .-  dftest.R .- dftest.D .- dftest.H, I => dftest.I, R => dftest.R, H => dftest.H, D => dftest.D ]","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"u0s = [ S => Ntotal - dftrain.I[1] - dftrain.R[1] - dftrain.H[1] - dftrain.D[1], I => dftrain.I[1], R => dftrain.R[1], H => dftrain.H[1], D => dftrain.D[1] ] _prob5 = remake(sirhdprob, u0 = u0s, tspan = (ttrain[1], ttrain[end]), p = [N => N_total])","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"parambounds = [     inf => [0.0, 1.0]     rec => [0.0, 1.0]     death => [0.0, 5.0]     ideath => [0.0, 5.0]     hosp => [0.0, 5.0]     hrec => [0.0, 5.0]     renew => [0.0, 1.0] ] fitparams5 = globaldatafit(prob5, parambounds, ttrain, datatrain,                              maxiters = 500000, loss = EasyModelAnalysis.relativel2loss)","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"@example evalscenario3","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/#Plot-training-fit-2","page":"Evaluation Scenario 3","title":"Plot training fit","text":"","category":"section"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"prob5train = remake(prob5, p = fitparams5) sol = solve(prob5train, saveat = ttrain); plot(map(datatrain) do (var, num)     plot(sol, idxs = var)     plot!(ttrain, num) end..., dpi = 300)","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"@example evalscenario3 savefig(\"trainfitS3_Q5.png\")","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"@example evalscenario3 u0s = [ S => Ntotal - dftest.I[1] - dftest.R[1] - dftest.H[1] - dftest.D[1], I => dftest.I[1], R => dftest.R[1], H => dftest.H[1], D => dftest.D[1] ] _prob5test = remake(prob5, p = fitparams5, u0=u0s, tspan = (ttest[1], ttest[end])) sol = solve(prob5test, saveat = ttest); plot(map(datatest) do (var, num)     plot(sol, idxs = var)     plot!(ttest, num) end..., dpi = 300)","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"@example evalscenario3 savefig(\"testfitS3_Q5.png\") ```","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/#Question-6:-New-Data","page":"Evaluation Scenario 3","title":"Question 6: New Data","text":"","category":"section"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"Question 6 is currently awaiting data from TA3","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/#Question-7:-Analysis","page":"Evaluation Scenario 3","title":"Question 7: Analysis","text":"","category":"section"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"For each model, summarize your conclusions about the following:","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/","page":"Evaluation Scenario 3","title":"Evaluation Scenario 3","text":"Do parameters fit from data seem reasonable and fall within typical ranges you might see in the broader literature? Provide references to support your conclusions.\nDescribe how well the fitted model compares against historical data, both for the ‘training’ and ‘test’ periods.","category":"page"},{"location":"Scenario3/Evaluation_Scenario_3/#Answer","page":"Evaluation Scenario 3","title":"Answer","text":"","category":"section"},{"location":"Scenario1/Evaluation_Scenario_1/#Evaluation-Scenario-1","page":"Evaluation Scenario 1","title":"Evaluation Scenario 1","text":"","category":"section"},{"location":"Scenario1/Evaluation_Scenario_1/","page":"Evaluation Scenario 1","title":"Evaluation Scenario 1","text":"This document is the solution set for Scenario 1 of the Jan 2023 DARPA ASKEM program evaluation. Quoted text is the scenario specfification provided by DARPA/MITRE. Unquoted text, code and output are intended to address the question posed in the scenario document, while providing use case illustration for the libraries in question.","category":"page"},{"location":"Scenario1/Evaluation_Scenario_1/","page":"Evaluation Scenario 1","title":"Evaluation Scenario 1","text":"In this scenario, we investigate the effects of different age population distributions on the effect of viral epidemics using a simple SIR model.","category":"page"},{"location":"Scenario1/Evaluation_Scenario_1/","page":"Evaluation Scenario 1","title":"Evaluation Scenario 1","text":"First, we load various packages for model exploration and data loading, which we will use later.","category":"page"},{"location":"Scenario1/Evaluation_Scenario_1/","page":"Evaluation Scenario 1","title":"Evaluation Scenario 1","text":"using EasyModelAnalysis, LinearAlgebra\nusing EasyModelAnalysis.ModelingToolkit: toparam\nusing EasyModelAnalysis.ModelingToolkit.Symbolics: FnType, variables\nusing XLSX, CSV, DataFrames, Plots\nusing Catlab, Catlab.CategoricalAlgebra, Catlab.Programs, AlgebraicPetri, AlgebraicPetri.TypedPetri\nusing Base: splat","category":"page"},{"location":"Scenario1/Evaluation_Scenario_1/#Stratified-SIR","page":"Evaluation Scenario 1","title":"Stratified SIR","text":"","category":"section"},{"location":"Scenario1/Evaluation_Scenario_1/","page":"Evaluation Scenario 1","title":"Evaluation Scenario 1","text":"Scenario Ask: In order to consider more nuanced interventions, we would like for models to account for different age groups and their contact dynamics. Start with a basic SIR model without vital dynamics, and stratify it according to the following questions.","category":"page"},{"location":"Scenario1/Evaluation_Scenario_1/","page":"Evaluation Scenario 1","title":"Evaluation Scenario 1","text":"We begin by creating a basic function that manually creates a stratified SIR model given a list of population buckets.","category":"page"},{"location":"Scenario1/Evaluation_Scenario_1/","page":"Evaluation Scenario 1","title":"Evaluation Scenario 1","text":"tf = 600\nconst k = 1000\nconst γ = 1/14\nconst R₀ = 5\nconst β = R₀ * γ\n\n\"\"\"\n    make_stratified_model(pops, contactmat; infectedfrac = nothing)\n\nGiven a list of population buckets `pops` (of length `n`), create a stratified SIR model with interaction\nincidence given by `contactmat`. The SIR parameters γ and R0 (and thus β) are inherited from global scope.\nReturns the system of differential equations that can be used for futher simulations.\n\nThe optional keyword argument `infectedfrac` specifies the fraction of each group that should be\nconsidered infected initially.\n\"\"\"\nfunction make_stratified_model(pops, contactmat; infectedfrac = nothing)\n    types = LabelledPetriNet([:Pop],\n                             :infect=>((:Pop, :Pop)=>(:Pop, :Pop)),\n                             :disease=>(:Pop=>:Pop),\n                             :strata=>(:Pop=>:Pop))\n    sir_uwd = @relation () where (S::Pop, I::Pop, R::Pop) begin\n        infect(S,I,I,I)\n        disease(I,R)\n    end\n    sir_typed = oapply_typed(types, sir_uwd, [:inf, :rec])\n    totalpop = sum(pops)\n    n = length(pops)\n    I₀ = something(infectedfrac, n / totalpop)\n    sir_paramd = add_params(sir_typed, Dict{Symbol,Float64}(:S => 1 - I₀, :I => I₀, :R => 0),\n                            Dict(:inf => β, :rec => γ))\n\n    ages = pairwise_id_typed_petri(types, :Pop, :infect, [Symbol(\"A$i\") for i = 1:n],\n                                   pops, contactmat ./ pops,\n                                   codom_net = codom(sir_paramd))\n    ages = add_reflexives(ages, repeat([[:disease]], n), types)\n    return typed_product(sir_paramd, ages)\nend\n\n\"\"\"\n    scenario1(pops, contactmat; infectedfrac, numinfected)\n\nRun a scenario 1 simulation with the given population buckets and contact matrix.\n`infectedfrac` has the same meaning as in `make_stratified_model`.\n`numinfected` allows specifying a fixed number of individuals in each age group\nconsidered infected initially.\n\"\"\"\nfunction scenario1(pops, mat; infectedfrac = nothing, numinfected = nothing)\n    sir_strat = flatten_labels(make_stratified_model(pops, mat; infectedfrac).dom)\n    sys = ODESystem(sir_strat)\n    U₀ = map(splat(*), sir_strat[:, :concentration])\n    if !isnothing(numinfected)\n        U₀[2:2:end] .= numinfected\n    end\n    P = map(splat(*), sir_strat[:, :rate])\n    prob = ODEProblem(sys, U₀, (0, tf), P)\n    solve(prob)\nend","category":"page"},{"location":"Scenario1/Evaluation_Scenario_1/#Question-1","page":"Evaluation Scenario 1","title":"Question 1","text":"","category":"section"},{"location":"Scenario1/Evaluation_Scenario_1/","page":"Evaluation Scenario 1","title":"Evaluation Scenario 1","text":"Start with a simple stratification with three age groups: young, middle-aged, and old.","category":"page"},{"location":"Scenario1/Evaluation_Scenario_1/#Sub-question-1.a.","page":"Evaluation Scenario 1","title":"Sub-question 1.a.","text":"","category":"section"},{"location":"Scenario1/Evaluation_Scenario_1/","page":"Evaluation Scenario 1","title":"Evaluation Scenario 1","text":"Begin with a situation where the population size across each age group is uniform: Nyoung = 2k, Nmiddle = 2k, N_old = 2k. Assume only one person in each age group is infectious at the beginning of the simulation. Let gamma = 1/14 days, and let R0 = 5. Assume gamma, beta, and R0 are the same for all age groups.","category":"page"},{"location":"Scenario1/Evaluation_Scenario_1/","page":"Evaluation Scenario 1","title":"Evaluation Scenario 1","text":"i. Simulate this model for the case where the 3x3 contact matrix is uniform (all values in matrix are 0.33)","category":"page"},{"location":"Scenario1/Evaluation_Scenario_1/","page":"Evaluation Scenario 1","title":"Evaluation Scenario 1","text":"N.B.: Uniform 1/n_strata is the default in our model creation function above.","category":"page"},{"location":"Scenario1/Evaluation_Scenario_1/","page":"Evaluation Scenario 1","title":"Evaluation Scenario 1","text":"sol = scenario1([2k, 2k, 2k], fill(1/3, 3, 3), numinfected = 1)\nplt_a1 = plot(sol, leg = :topright)","category":"page"},{"location":"Scenario1/Evaluation_Scenario_1/","page":"Evaluation Scenario 1","title":"Evaluation Scenario 1","text":"ii. Simulate this model for the case where there is significant in-group contact preference – you may choose the numbers in the matrix to represent this in- group preference.","category":"page"},{"location":"Scenario1/Evaluation_Scenario_1/","page":"Evaluation Scenario 1","title":"Evaluation Scenario 1","text":"We pick a contact matrix with significant (0.4) in-group interaction and somewhat weak (but differening, to make the plots more interesting) off-diagonal interactions.","category":"page"},{"location":"Scenario1/Evaluation_Scenario_1/","page":"Evaluation Scenario 1","title":"Evaluation Scenario 1","text":"contact_matrix = [0.4  0.05  0.1\n                  0.05 0.4   0.15          \n                  0.1  0.15  0.4]","category":"page"},{"location":"Scenario1/Evaluation_Scenario_1/","page":"Evaluation Scenario 1","title":"Evaluation Scenario 1","text":"We now use this updated contact matrix to re-run the simulation.","category":"page"},{"location":"Scenario1/Evaluation_Scenario_1/","page":"Evaluation Scenario 1","title":"Evaluation Scenario 1","text":"sol = scenario1([2k, 2k, 2k], contact_matrix, numinfected = 1)\nplt_a2 = plot(sol, leg = :topright)","category":"page"},{"location":"Scenario1/Evaluation_Scenario_1/","page":"Evaluation Scenario 1","title":"Evaluation Scenario 1","text":"iii. Simulate this model for the case where there is no contact between age groups. You may choose the numbers in the matrix, but ensure it meets the requirement of no contact between age groups.","category":"page"},{"location":"Scenario1/Evaluation_Scenario_1/","page":"Evaluation Scenario 1","title":"Evaluation Scenario 1","text":"sol = scenario1([2k, 2k, 2k], Diagonal(contact_matrix), numinfected = 1)\nplt_a3 = plot(sol, leg = :topright)","category":"page"},{"location":"Scenario1/Evaluation_Scenario_1/","page":"Evaluation Scenario 1","title":"Evaluation Scenario 1","text":"Simulate social distancing by scaling down the uniform contact matrix by a factor (e.g. multiply by 0.5)","category":"page"},{"location":"Scenario1/Evaluation_Scenario_1/","page":"Evaluation Scenario 1","title":"Evaluation Scenario 1","text":"uniform_matrix = fill(0.33, (3, 3))\nsol = scenario1([2k, 2k, 2k], 0.5 * uniform_matrix, numinfected = 1)\nplt_a4 = plot(sol, leg = :topright)","category":"page"},{"location":"Scenario1/Evaluation_Scenario_1/","page":"Evaluation Scenario 1","title":"Evaluation Scenario 1","text":"Repeat 1.a.iv for the scenario where the young population has poor compliance with social distancing policies, but the old population is very compliant.","category":"page"},{"location":"Scenario1/Evaluation_Scenario_1/","page":"Evaluation Scenario 1","title":"Evaluation Scenario 1","text":"scaling = Diagonal([0.9, 0.8, 0.4])\nsol = scenario1([2k, 2k, 2k], scaling * uniform_matrix, numinfected = 1)\nplt_a5 = plot(sol, leg = :topright)","category":"page"},{"location":"Scenario1/Evaluation_Scenario_1/","page":"Evaluation Scenario 1","title":"Evaluation Scenario 1","text":"Now we combine all the plots into one to allow easy comparison.","category":"page"},{"location":"Scenario1/Evaluation_Scenario_1/","page":"Evaluation Scenario 1","title":"Evaluation Scenario 1","text":"plot(plt_a1, plt_a2, plt_a3, plt_a4, plt_a5, size = (1000, 500))","category":"page"},{"location":"Scenario1/Evaluation_Scenario_1/","page":"Evaluation Scenario 1","title":"Evaluation Scenario 1","text":"Repeat 1.a for a younger-skewing population: N_young = 3k, N_middle = 2k, N_old = 1k","category":"page"},{"location":"Scenario1/Evaluation_Scenario_1/","page":"Evaluation Scenario 1","title":"Evaluation Scenario 1","text":"sol = scenario1([3k, 2k, 1k], fill(1/3, 3, 3), numinfected = 1)\nplt_b1 = plot(sol, leg = :topright, title = \"i\")\n\nsol = scenario1([3k, 2k, 1k], contact_matrix, numinfected = 1)\nplt_b2 = plot(sol, leg = :topright, title = \"ii\")\n\nsol = scenario1([3k, 2k, 1k], Diagonal(contact_matrix), numinfected = 1)\nplt_b3 = plot(sol, leg = :topright, title = \"iii\")\n\nsol = scenario1([3k, 2k, 1k], 0.5 * uniform_matrix, numinfected = 1)\nplt_b4 = plot(sol, leg = :topright, title = \"iv\")\n\nsol = scenario1([3k, 2k, 1k], scaling * uniform_matrix, numinfected = 1)\nplt_b5 = plot(sol, leg = :topright, title = \"v\")\n\nplot(plt_b1, plt_b2, plt_b3, plt_b4, plt_b5, size = (1000, 500))","category":"page"},{"location":"Scenario1/Evaluation_Scenario_1/","page":"Evaluation Scenario 1","title":"Evaluation Scenario 1","text":"Repeat 1.a for an older-skewing population: N_young = 1k, N_middle = 2k, N_old = 3k","category":"page"},{"location":"Scenario1/Evaluation_Scenario_1/","page":"Evaluation Scenario 1","title":"Evaluation Scenario 1","text":"sol = scenario1([1k, 2k, 3k], fill(1/3, 3, 3), numinfected = 1)\nplt_c1 = plot(sol, leg = :topright, title = \"i\")\n\nsol = scenario1([1k, 2k, 3k], contact_matrix, numinfected = 1)\nplt_c2 = plot(sol, leg = :topright, title = \"ii\")\n\nsol = scenario1([1k, 2k, 3k], Diagonal(contact_matrix), numinfected = 1)\nplt_c3 = plot(sol, leg = :topright, title = \"iii\")\n\nsol = scenario1([1k, 2k, 3k], 0.5 * uniform_matrix, numinfected = 1)\nplt_c4 = plot(sol, leg = :topright, title = \"iv\")\n\nsol = scenario1([1k, 2k, 3k], scaling * uniform_matrix, numinfected = 1)\nplt_c5 = plot(sol, leg = :topright, title = \"v\")\n\nplot(plt_c1, plt_c2, plt_c3, plt_c4, plt_c5, size = (1000, 500))","category":"page"},{"location":"Scenario1/Evaluation_Scenario_1/","page":"Evaluation Scenario 1","title":"Evaluation Scenario 1","text":"d. Compare simulation outputs from 1a-c, and describe any takeaways/conclusions.","category":"page"},{"location":"Scenario1/Evaluation_Scenario_1/","page":"Evaluation Scenario 1","title":"Evaluation Scenario 1","text":"The most difference between age demographics can be seen in the case where there are social-distancing compliance differences. We complare these plots here:","category":"page"},{"location":"Scenario1/Evaluation_Scenario_1/","page":"Evaluation Scenario 1","title":"Evaluation Scenario 1","text":"plot(plt_a5, plt_b5, plt_c5)","category":"page"},{"location":"Scenario1/Evaluation_Scenario_1/#Question-2","page":"Evaluation Scenario 1","title":"Question 2","text":"","category":"section"},{"location":"Scenario1/Evaluation_Scenario_1/","page":"Evaluation Scenario 1","title":"Evaluation Scenario 1","text":"Now find real contact matrix data and stratify the basic SIR model with the appropriate number of age groups to match the data found. To simulate the model with realistic initial values, find data on population distribution by age group. As in question 1, let gamma = 1/14 days, and let R0 = 5. Assume gamma, beta, and R0 are the same for all age groups.","category":"page"},{"location":"Scenario1/Evaluation_Scenario_1/","page":"Evaluation Scenario 1","title":"Evaluation Scenario 1","text":"TA1 provided the data from \"Projecting social contact matrices in 152 countries using contact surveys and demographic data\" by Prem, et al. This paper comes with 10 Excel files that provide contact matrices for 152 countries at work, home, school and other locations (plus a data set of the sum of these locations). The data values in these excel files are raw, averaged survey results.","category":"page"},{"location":"Scenario1/Evaluation_Scenario_1/","page":"Evaluation Scenario 1","title":"Evaluation Scenario 1","text":"note: Note\nWe make no attempt to normalize or otherwise adjust the contact matrices. The interpretation of the contact matrices needs to be consistent with the SIR parameter β, which is fixed in our the given scenario. In a real world case, care would need to be taken to match the units of the contact matrix to the units of β.","category":"page"},{"location":"Scenario1/Evaluation_Scenario_1/","page":"Evaluation Scenario 1","title":"Evaluation Scenario 1","text":"# Load contact matrices\nxf_all_locations1 = XLSX.readxlsx(\"data/MUestimates_all_locations_1.xlsx\")\nxf_all_locations2 = XLSX.readxlsx(\"data/MUestimates_all_locations_2.xlsx\")\nxf_work1 = XLSX.readxlsx(\"data/MUestimates_work_1.xlsx\")\nxf_work2 = XLSX.readxlsx(\"data/MUestimates_work_2.xlsx\")\nxf_school1 = XLSX.readxlsx(\"data/MUestimates_school_1.xlsx\")\nxf_school2 = XLSX.readxlsx(\"data/MUestimates_school_2.xlsx\")\nxf_home1 = XLSX.readxlsx(\"data/MUestimates_home_1.xlsx\")\nxf_home2 = XLSX.readxlsx(\"data/MUestimates_home_2.xlsx\")\nxf_other1 = XLSX.readxlsx(\"data/MUestimates_other_locations_1.xlsx\")\nxf_other2 = XLSX.readxlsx(\"data/MUestimates_other_locations_2.xlsx\")\n\nxfs1 = (; all = xf_all_locations1, work = xf_work1, school = xf_school1,\n        home = xf_home1, other = xf_other1)\nxfs2 = (; all = xf_all_locations2, work = xf_work2, school = xf_school2,\n        home = xf_home2, other = xf_other2)\n\nto_cm(sheet) = Float64[sheet[i, j] for i in 2:17, j in 1:16]","category":"page"},{"location":"Scenario1/Evaluation_Scenario_1/","page":"Evaluation Scenario 1","title":"Evaluation Scenario 1","text":"We begin by loading up the relevant data for Belgium and quickly visualizing the contract matrix.","category":"page"},{"location":"Scenario1/Evaluation_Scenario_1/","page":"Evaluation Scenario 1","title":"Evaluation Scenario 1","text":"# Load Belgium contact matrix\ncm_belg = to_cm(xf_all_locations1[\"Belgium\"])\nheatmap(cm_belg, yflip=true)","category":"page"},{"location":"Scenario1/Evaluation_Scenario_1/","page":"Evaluation Scenario 1","title":"Evaluation Scenario 1","text":"Next we load the population distribution data.","category":"page"},{"location":"Scenario1/Evaluation_Scenario_1/","page":"Evaluation Scenario 1","title":"Evaluation Scenario 1","text":"pop_belg = collect(values(CSV.read(\"data/2022_ Belgium_population_by_age.csv\", DataFrame,\n                           header = 3)[1, 2:17]))\nbar(1:length(pop_belg), collect(pop_belg), permute=(:x, :y), xlabel=\"Age (5 year buckets)\", ylabel=\"Total # of people\", leg=:none)","category":"page"},{"location":"Scenario1/Evaluation_Scenario_1/","page":"Evaluation Scenario 1","title":"Evaluation Scenario 1","text":"# Set up model\n# Per MITRE: Assume that the same fixed fraction of the population in each stratum is initially infected. Here: 0.01%\nsol = scenario1(pop_belg, cm_belg, infectedfrac = 0.0001)\nplot(sol, leg = :topright)","category":"page"},{"location":"Scenario1/Evaluation_Scenario_1/","page":"Evaluation Scenario 1","title":"Evaluation Scenario 1","text":"If the data you’ve found supports this, compare the situation for a country with significant multi-generational contact beyond two generations (as indicated by multiple contact matrix diagonal bandings), and for a country without.","category":"page"},{"location":"Scenario1/Evaluation_Scenario_1/","page":"Evaluation Scenario 1","title":"Evaluation Scenario 1","text":"TA1 advises that India has significant multi-generational contact, while Belgium does not. We repeat the exercise for India.","category":"page"},{"location":"Scenario1/Evaluation_Scenario_1/","page":"Evaluation Scenario 1","title":"Evaluation Scenario 1","text":"# Load India contact matrix\ncm_india = to_cm(xf_all_locations1[\"India\"])\nhm = heatmap(cm_india, yflip=true)\n\n# Load India population distribution\npop_india = collect(values(CSV.read(\"data/2016_india_population_by_age.csv\", DataFrame)[1, 3:18]))\nbar_india = bar(1:length(pop_india), collect(pop_india), permute=(:x, :y), xlabel=\"Age (5 year buckets)\", ylabel=\"Total # of people\", leg=:none)\nplot(hm, bar_india)","category":"page"},{"location":"Scenario1/Evaluation_Scenario_1/","page":"Evaluation Scenario 1","title":"Evaluation Scenario 1","text":"sol = scenario1(pop_india, cm_india, infectedfrac = 0.0001)\nplot(sol, leg = :topright)","category":"page"},{"location":"Scenario1/Evaluation_Scenario_1/","page":"Evaluation Scenario 1","title":"Evaluation Scenario 1","text":"If the data supports this, try implementing interventions like: (1) School closures (2) Social distancing at work and other locations, but not at home.","category":"page"},{"location":"Scenario1/Evaluation_Scenario_1/","page":"Evaluation Scenario 1","title":"Evaluation Scenario 1","text":"(1) School closures","category":"page"},{"location":"Scenario1/Evaluation_Scenario_1/","page":"Evaluation Scenario 1","title":"Evaluation Scenario 1","text":"Prem et al Supplementary info, page 20","category":"page"},{"location":"Scenario1/Evaluation_Scenario_1/","page":"Evaluation Scenario 1","title":"Evaluation Scenario 1","text":"function cm_school(xfs, country)\n    to_cm(xfs[:home][country]) + to_cm(xfs[:work][country]) + to_cm(xfs[:other][country])\nend # no school\n\ncm_belgium_school_closure = cm_school(xfs1, \"Belgium\")\nsol = scenario1(pop_belg, cm_belgium_school_closure, infectedfrac = 0.0001)\nplot(sol, leg = :topright)","category":"page"},{"location":"Scenario1/Evaluation_Scenario_1/","page":"Evaluation Scenario 1","title":"Evaluation Scenario 1","text":"(2) Social distancing at work and other locations, but not at home.","category":"page"},{"location":"Scenario1/Evaluation_Scenario_1/","page":"Evaluation Scenario 1","title":"Evaluation Scenario 1","text":"Prem et al sets social distancing to reduce contacts by half","category":"page"},{"location":"Scenario1/Evaluation_Scenario_1/","page":"Evaluation Scenario 1","title":"Evaluation Scenario 1","text":"function cm_social_dist(xfs, country)\n    to_cm(xfs[:home][country]) + 0.5 * to_cm(xfs[:work][country]) +\n    0.5 * to_cm(xfs[:school][country]) + 0.5 * to_cm(xfs[:other][country])\nend\n\ncm_belgium_social_dist = cm_social_dist(xfs1, \"Belgium\")\nsol = scenario1(pop_belg, cm_belgium_social_dist, infectedfrac = 0.0001)\nplot(sol, leg = :topright)","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/#Evaluation-Scenario-2","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"","category":"section"},{"location":"Scenario2/Evaluation_Scenario_2/#Question-1","page":"Evaluation Scenario 2","title":"Question 1","text":"","category":"section"},{"location":"Scenario2/Evaluation_Scenario_2/#Read-in-the-SIDARTHE-model-from-a-JSON-formed-from-Semagrams","page":"Evaluation Scenario 2","title":"Read in the SIDARTHE model from a JSON formed from Semagrams","text":"","category":"section"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"using Catlab, AlgebraicPetri, Catlab.CategoricalAlgebra, ModelingToolkit\nusing AlgebraicPetri.SubACSets\nsidarthe = read_json_acset(LabelledPetriNet, \"sidarthe.json\")\nsys = ODESystem(sidarthe)","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/#Load-parameter-values-and-initial-concentrations-from-SBML-file","page":"Evaluation Scenario 2","title":"Load parameter values and initial concentrations from SBML file","text":"","category":"section"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"This uses our SBMLToolkit.jl library which reads SBML into ModelingToolkit and generates TeX'd versions of the equations so we could read the resulting model and confirm it is correct against the paper description.","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"using EasyModelAnalysis, SBML, SBMLToolkit, UnPack, Test\n\nfn = \"Giordano2020.xml\"\n\nmyread(fn) = readSBML(fn, doc -> begin\n                          set_level_and_version(3, 2)(doc)\n                          convert_promotelocals_expandfuns(doc)\n                      end)\n\nm = myread(fn)\n\nparamvals = map(name->m.parameters[string(name)].value, tnames(sidarthe))\nnamemap = Dict(:S => \"Susceptible\", :I => \"Infected\", :D => \"Diagnosed\", :A => \"Ailing\", :R => \"Recognized\",\n               :T => \"Threatened\", :H => \"Healed\", :E => \"Extinct\")\nu0vals = map(name->m.species[namemap[name]].initial_concentration, snames(sidarthe))\nlet S, I, D, A, R, T, H, E\n    @unpack S, I, D, A, R, T, H, E = sys\n    global Infected, Healed, Extinct, Diagnosed, Ailing, Recognized, Susceptible, Threatened\n    Infected, Healed, Extinct, Diagnosed, Ailing, Recognized, Susceptible, Threatened = I, H, E, D, A, R, S, T\nend\n@unpack beta, gamma, delta, alpha, epsilon, kappa, sigma, rho, xi, mu, tau, lambda, eta, nu, zeta, theta = sys\nps = [alpha, epsilon, gamma, beta, delta, mu, nu, lambda, rho, kappa, xi, sigma, zeta, eta]\ndefaultsmap = Dict(param => val for (param, val) in zip(parameters(sys), paramvals))","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/#Unit-Tests","page":"Evaluation Scenario 2","title":"Unit Tests","text":"","category":"section"},{"location":"Scenario2/Evaluation_Scenario_2/#Unit-Test-1","page":"Evaluation Scenario 2","title":"Unit Test 1","text":"","category":"section"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"Set the initial values and parameters, as described in the Supplementary Methods section of the publication (pg. 9 of the pdf):","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"Initial Values: I = 200/60e6, D = 20/60e6, A = 1/60e6, R = 2/60e6, T = 0, H = 0, E = 0; S = 1 – I – D – A – R – T – H – E. Let total population = 60e6.","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"Parameters: α = 0.570, β = δ = 0.011, γ = 0.456, ε = 0.171, θ = 0.371, ζ = η = 0.125, μ = 0.017, ν = 0.027, τ = 0.01, λ = ρ = 0.034 and κ = ξ = σ = 0.017.","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"Simulate for 100 days, and determine the day and level of peak total infections (sum over all the infected states I, D, A, R, T). Expected output: The peak should occur around day 47, when ~60% of the population is infected.","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"The SBML model that was given had a few oddities. First, it made use of delay blocks. These are usually used to describe a delay differential equation. While our simulator does have the capability to solve delay differential equations and their inverse problems, it turns out that this was an issue with the SBML writing of the model as all of the delay values were zero. Thus as a simplification, we manually deleted the delay blocks to give a standard ODE representation (since a delay of 0 on all states is mathematically equivalent).","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"The paper and SBML model also described time-dependent parameters. These are parameters that would discretely change at pre-specified time points. However, we believe that the evaluators and/or paper must have used an SBML reading system that incorrectly handled these time-dependent parameters. This is because dropping the time-dependency and treating the parameters as constant gives the requested results of the unit test 1. A demonstration of this is as follows:","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"ssys = structural_simplify(sys)\nprobne = ODEProblem(ssys, u0vals, (0.0, 100.0), paramvals)\nsolne = solve(probne, Tsit5())\nplot(solne)","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"idart = [Infected, Diagnosed, Ailing, Recognized, Threatened]\nxmax, xmaxval = get_max_t(probne, sum(idart))\n@test isapprox(xmax, 47; atol = 0.5)\n@test isapprox(xmaxval, 0.6, atol = 0.01)","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/#Full-Analysis-of-the-Effect-of-Events","page":"Evaluation Scenario 2","title":"Full Analysis of the Effect of Events","text":"","category":"section"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"The SBML model already contains the changes of parameters requested for Unit Test #2 in the form of events. In the SBML these are enclosed by the element listOfEvents. The ids correspond to the days of the introduction of government intervention as outlined in the paper. \"On day 4, R0 = 1.66 as a result of the introduction of basic social distancing, awareness of the epidemic, hygiene and behavioral recommendations, and early measures by the Italian government (for example, closing schools). At day 12, ... \". When we interpret the instructions \"Unit Test #1: Set the initial values and parameters, as desribed in the Supplementary Methods...\" as \"Set the initial values and set and maintain the paramters (i.e. simulate without government restrictions)...\" we have to remove the events from the model. If we do so, the unit tests pass.","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"solne = solve(probne, Tsit5())\np = plot(solne, vars = idart)","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"p = plot(solne, idxs = [sum(idart)], lab = \"total infected\")","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/#Unit-Test-2","page":"Evaluation Scenario 2","title":"Unit Test 2","text":"","category":"section"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"Now update the parameters to reflect various interventions that Italy implemented during the first wave, as described in detail on pg. 9.  Simulate for 100 days, reproduce the trajectories in Fig. 2B, and determine the day and level of peak total infections (sum over all the infected states I, D, A, R, T). Expected output: Trajectories in Fig. 2B, peak occurs around day 50, with ~0.2% of the total population infected.","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"This unit test was a straightforward implementation of the scenario, requiring a named reparameterization. It makes use of the new ModelingToolkit feature designed for ASKEM, remake(prob, u0 = u0s, p = pars), which allows for a new ODE to be generated from the old ODE simply by mentioning which parameters need to be changed (all others are kept constant). The approximation tests on the bottom demonstrate that the results in Fig 2B are obtained.","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"ITALY_POPULATION = 60e6\nu0s = [\n    Infected => 200 / ITALY_POPULATION,\n    Diagnosed => 20 / ITALY_POPULATION,\n    Ailing => 1 / ITALY_POPULATION,\n    Recognized => 2 / ITALY_POPULATION,\n    Threatened => 0,\n    Healed => 0,\n    Extinct => 0,\n]\npush!(u0s, Susceptible => 1 - sum(last.(u0s)))\n\n# The resulting basic reproduction number is R0 = 2.38.\npars = [alpha => 0.570, beta => 0.011, delta => 0.011, gamma => 0.456, epsilon => 0.171,\n    theta => 0.371,\n    zeta => 0.125, eta => 0.125, mu => 0.017, nu => 0.027, tau => 0.01,\n    lambda => 0.034, rho => 0.034, kappa => 0.017, xi => 0.017, sigma => 0.017]\nprob = ODEProblem(ssys, u0vals, (0, 100), paramvals)\nprob_test1 = remake(prob, u0 = u0s, p = pars)\nsolt1 = solve(prob_test1, Tsit5(); saveat = 0:100)\nog_states = states(sys)[1:8]\nidart = [Infected, Diagnosed, Ailing, Recognized, Threatened]\nplot(solt1; idxs = Infected)","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"plot(solt1; idxs = Diagnosed)","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"plot(solt1; idxs = idart)","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"@test solt1[Infected + Healed] == solt1[Infected] + solt1[Healed]","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"plot(solt1.t, solt1[sum(idart)] * ITALY_POPULATION; label = \"IDART absolute\")","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"plot(solt1.t, solt1[sum(idart)]; label = \"IDART percent\")","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"xmax, xmaxval = get_max_t(prob_test1, sum(idart))\n\n@test isapprox(xmax, 47; atol = 4)","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"This test passes with SBML.jl","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"@test_broken isapprox(xmaxval, 0.002; atol = 0.01)","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"This last test worked with the SBML script, but fails with the model from TA2. It seems inconsequential to the rest of the analysis.","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/#Sensitivity-Analysis","page":"Evaluation Scenario 2","title":"Sensitivity Analysis","text":"","category":"section"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"The difference between 1.b.i and 1.b.ii are changes in some parameter values over time. Describe the difference in outcomes between b.i and b.ii. Perform a sensitivity analysis to understand the sensitivity of the model to parameter variations and determine which parameter(s) were most responsible for the change in outcomes.","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"This analysis was a straightforward application of the get_sensitivity function in EasyModelAnalysis. The only issue was the creation of the bounds for the parameters, which was not given by the metadata from TA1/TA2. Thus we made a modeling choice that the viable parameter set is 50% below and 100% above the starting parameter choice. Future iterations of the modeling platform should preserve parameter bound data which would make this a one line analysis.","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"A utility was added (https://github.com/SciML/EasyModelAnalysis.jl/pull/134) to make it so the sensitivity values did not need to be recreated for the plotting process. This was just a minor performance and \"niceity\" improvement. Polish.","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"The sensitivity analysis needed 1000 samples, we reduced it to 200 due to memory limitations of our documentation building compute server.","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"pbounds = [param => [\n               0.5 * defaultsmap[param],\n               2 * defaultsmap[param],\n    ] for param in parameters(sys)]\nsensres = get_sensitivity(probne, 100.0, Infected, pbounds; samples = 200)\nsensres_vec = collect(sensres)\nsort(filter(x -> endswith(string(x[1]), \"_first_order\"), sensres_vec), by = x -> abs(x[2]),\n     rev = true)","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"sort(filter(x -> endswith(string(x[1]), \"_second_order\"), sensres_vec), by = x -> abs(x[2]),\n     rev = true)","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"sort(filter(x -> endswith(string(x[1]), \"_total_order\"), sensres_vec), by = x -> abs(x[2]),\n     rev = true)","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"create_sensitivity_plot(sensres, pbounds, true, ylims = (-0.2, 1.0), size=(800, 800))","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/#Minimum-Parameter-Threshold","page":"Evaluation Scenario 2","title":"Minimum Parameter Threshold","text":"","category":"section"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"Now return to the situation in b.i (constant parameters that don’t change over time). Let’s say we want to increase testing, diagnostics, and contact tracing efforts (implemented by increasing the detection parameters ε and θ). Assume that θ >= 2* ε, because a symptomatic person is more likely to be tested. What minimum constant values do these parameters need to be over the course of a 100-day simulation, to ensure that the total infected population (sum over all the infected states I, D, A, R, T) never rises above 1/3 of the total population?","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"This scenario demonstrates the lazily defined observables functionality that persists throughout our simulation and analysis libraries. When one solves an equation with ModelingToolkit symbolic values, sol[x] gives the solution with respect to x by name. While that improves code legibility, sol[x+y] is also allowed, and will automatically generate the solution of x(t) + y(t) on demand. Since this functionality is directly handled by the solution representation, this means that all functions built on the solution have this functionality. Thus without having to make any other changes, we can change our minimization to the complex form (Infected + Diagnosed + Ailing + Recognized + Threatened) / sum(states(sys)) required by the scenario.","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"However, this scenario also required making a modeling choice. In order to perform this minimization we needed, we needed to define the comparative cost between the different intervention parameters, epsilon and theta. We have made the assumption that the cost of interventions on these two parameters are the same, and have made requests to TA1/TA2 about the interpretation of these parameters for further information.","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"threshold_observable = (Infected + Diagnosed + Ailing + Recognized + Threatened) /\n                       sum(states(sys))\ncost = (epsilon + theta)\nineq_cons = [2 * epsilon - theta]\nopt_p, sol_opt_p, ret = optimal_parameter_threshold(probne, threshold_observable,\n                                                    0.33,\n                                                    cost, [epsilon, theta],\n                                                    [0.0, 0.0],\n                                                    3 .* [\n                                                        defaultsmap[epsilon],\n                                                        defaultsmap[theta],\n                                                    ];\n                                                    maxtime = 60,\n                                                    ineq_cons);\nopt_p","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"plot(sol_opt_p, idxs = [threshold_observable], lab = \"total infected\", leg = :bottomright)","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/#Question-2","page":"Evaluation Scenario 2","title":"Question 2","text":"","category":"section"},{"location":"Scenario2/Evaluation_Scenario_2/#Form-SIDARTHE-V-model","page":"Evaluation Scenario 2","title":"Form SIDARTHE-V model","text":"","category":"section"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"This forms SIDARTHE-V by manually adding the V state and vax transition. It compares the models via maximum common subacset, plotting the common subgraph (the original SIDARTHE), the negation (the new transition and vax state), and the complement (the new transition from susceptible to vax).","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"import Graphviz_jll\nsidarthe_v = read_json_acset(LabelledPetriNet, \"sidarthe_v.json\")\n\nmca_sidarthe_v = mca(sidarthe,sidarthe_v)\nAlgebraicPetri.Graph(mca_sidarthe_v[1])","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"sidarthe_sub = Subobject(\n  sidarthe_v,\n  S=parts(sidarthe, :S),\n  T=parts(sidarthe, :T),\n  I=parts(sidarthe, :I),\n  O=parts(sidarthe, :O)\n)\nAlgebraicPetri.Graph(dom(hom(negate(sidarthe_sub))))","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/#Setup-the-Parameters","page":"Evaluation Scenario 2","title":"Setup the Parameters","text":"","category":"section"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"Set the same initial values and parameter settings in 1.b.i. Let V(t=0) = 0, τ (in SIDARTHE) = τ2 (in SIDDARTHE-V), and τ1 = (1/3)*τ2 (reflecting the fact that the mortality rate for critical conditions (state T), will always be larger than for other infected states). Assume that the vaccination rate psi is 0 to start with. The SIDARTHE-V model allows for three main types of interventions: (1) Those that impact the transmission parameters (α, β, γ and δ) – social distancing, masking, lockdown; (2) Those that impact the detection parameters (ε, θ) – testing and contact tracing; (3) Those that impact the vaccination rate psi – vaccination campaigns. Assume previously stated constraints: θ >= 2* ε, and τ1 = (1/3)*τ2.","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"sysv = ODESystem(sidarthe_v)\nu0valsv = [u0vals; 0.0]  # 0 vaccinated initially\n@unpack beta, gamma, delta, alpha, epsilon, kappa, sigma, rho, xi, mu, tau1, tau2, lambda, eta, nu, zeta, theta, vax = sysv\nphi = vax\np_map = Dict([parameters(sys) .=> paramvals\n         tau2 => defaultsmap[tau]\n         tau1 => defaultsmap[tau] / 3\n         vax => 0.0])\nsts_map = Dict(states(sysv) .=> u0valsv)\nusing ModelingToolkit: @set!\ndefs_v2 = merge(sts_map, p_map)\n@set! sysv.defaults = defs_v2\nsysv = complete(sysv)","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"probv = ODEProblem(sysv, [], (0, 100))\nsolv = solve(probv, Tsit5())\nplot(solv)","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"plot(solv, idxs = [og_states; sysv.V])","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"plot(solt1; idxs = sum(idart))","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"xmax, xmaxval = get_max_t(probv, sum(idart) * ITALY_POPULATION)\nxmax, xmaxval = get_max_t(probv, sum(idart))\n\n@test isapprox(xmax, 47; atol = 1)","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"@test isapprox(xmaxval, 0.6; atol = 0.1)","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"This test passed with the original SBML model but failed with the model from the TA2 integration.","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/#b.i","page":"Evaluation Scenario 2","title":"b.i","text":"","category":"section"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"Let’s say our goal is to ensure that the total infected population (sum over all the infected states I, D, A, R, T) never rises above 1/3 of the total population, over the course of the next 100 days. If you could choose only a single intervention (affecting only one parameter), which intervention would let us meet our goal, with minimal change to the intervention parameter? Assume that the intervention will be implemented after one month (t = day 30), and will stay constant after that, over the remaining time period (i.e. the following 70 days). What are equivalent interventions of the other two intervention types, that would have the same impact on total infections?","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"This is a straightforward usage of the EasyModelAnalysis.optimal_parameter_intervention_for_threshold function designed during the ASKEM hackathon. It was able to be used without modification. However, a modeling decision had to be made to define what the \"intervention parameters\" are. A data request back to TA1/TA2 has been made to define which parameters should be in this set.","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"This example revealed a typo in our function (https://github.com/SciML/EasyModelAnalysis.jl/pull/135) which had to be fixed.","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"threshold_observable = (Infected + Diagnosed + Ailing + Recognized + Threatened) /\n                       sum(states(sysv))\nplot(solv, idxs = [threshold_observable], lab = \"total infected\")\nhline!([1 / 3], lab = \"limit\")","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"intervention_parameters = [theta => (2 * defs_v2[epsilon], 1) # 𝜃 >= 2 * 𝜀\n                           epsilon => (0, defs_v2[theta] / 2)\n                           phi => (0, 1)]\n\nopt_results = map(intervention_parameters) do (intervention_p, bounds)\n    cost = intervention_p - defs_v2[intervention_p]\n    optimal_parameter_intervention_for_threshold(probv,\n                                                 threshold_observable,\n                                                 0.33,\n                                                 cost,\n                                                 [intervention_p], [0.0],\n                                                 [1.0],\n                                                 (30.0, 100.0);\n                                                 maxtime = 10);\nend;\nmap(first, opt_results)","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"plts = map(opt_results) do opt_result\n    title = only(collect(opt_result[1]))\n    title = string(title[1], \" = \", round(title[2], sigdigits = 3))\n    plot(opt_result[2][2]; idxs = [threshold_observable], lab = \"total infected\", title)\n    hline!([1/3], lab = \"limit\")\nend\nplot(plts...)","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/#b.ii","page":"Evaluation Scenario 2","title":"b.ii","text":"","category":"section"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"Let’s say our goal is to get the reproduction number Rt below 1.0, within the next 60 days. Which interventions will allow us to meet our goal, while minimizing total cumulative infections (over all infected states I, D, A, R, T)? If there are multiple options, show the tradeoff between change in parameter and infected populations – show the space of possible solutions. Which single intervention would have the greatest impact on Rt and let us meet our goal with minimal change to the intervention parameter, while minimizing total cumulative infections? Assume that the intervention will be implemented immediately. Use Rt as defined in the SIDDARTHE-V publication. No intervention and increasing the infected population, are not valid solutions for this problem.","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"A modeling decision required here was the definition of intervention parameters, which we decided to use the same parameters as b.i.","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"@unpack S, I, D, A, R, T = sysv\nr1 = epsilon + xi + lambda\nr2 = eta + rho\nr3 = theta + mu + kappa\nr4 = nu + xi + tau1\nr5 = sigma + tau2\nR0 = (alpha + beta * epsilon / r2 + gamma * zeta / r3 + delta * ((eta * epsilon /\n(r2 * r4)) + (zeta * theta)/ (r3 * r4))) / r1\nR_t = S * R0\nplot(solv, idxs = [R_t], lab = \"R_t\")\n@variables t cumulative_inf(t)\ntotal_inf = (I + D + A + R + T) / sum(states(sysv))\nsysva = add_accumulations(sysv, [cumulative_inf => total_inf])\nusing ModelingToolkit: @set!\n@set! sysva.defaults = defs_v2\nu03 = [u0valsv; 0.0]\nprobv3 = ODEProblem(sysva, u03, (0, 60.0))\nsolv3 = solve(probv3)\nplot(solv3)","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"A modeling decision required here is that we want to minimize the sum of normalized cumulative total infections and the change of intervention parameters theta, epsilon, and phi.","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"intervention_parameters = [theta => (2 * defs_v2[epsilon], 3) # 𝜃 >= 2 * 𝜀\n                           epsilon => (0, defs_v2[theta] / 2)\n                           phi => (0, 1)]\nsol_cost = sol -> begin\n    sol(sol.t[end], idxs = cumulative_inf)\nend\nopt_results = map(intervention_parameters) do (intervention_p, bounds)\n    cost = intervention_p - defs_v2[intervention_p]\n    optimal_parameter_intervention_for_reach(probv3,\n                                             R_t,\n                                             1.0,\n                                             (cost, sol_cost),\n                                             [intervention_p], [bounds[1]], [bounds[2]],\n                                             maxtime = 10)\nend;\nmap(first, opt_results)","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"We can see that increasing the rate of vaccination is the most effective.","category":"page"},{"location":"Scenario2/Evaluation_Scenario_2/","page":"Evaluation Scenario 2","title":"Evaluation Scenario 2","text":"plts = map(opt_results) do opt_result\n    title = only(collect(opt_result[1]))\n    title = string(title[1], \" = \", round(title[2], sigdigits = 3))\n    plot(opt_result[2][2]; idxs = [R_t], lab = \"R_t\", title)\n    plot!(opt_result[2][2]; idxs = [cumulative_inf], lab = \"cumulative infected\", title)\n    hline!([1], lab = \"limit\", ylims = (0, 10))\nend\nplot(plts...)","category":"page"},{"location":"#DARPA-ASKEM-6-Month-Evaluations","page":"DARPA-ASKEM Evaluation","title":"DARPA ASKEM 6 Month Evaluations","text":"","category":"section"},{"location":"#Reproducing-the-Results","page":"DARPA-ASKEM Evaluation","title":"Reproducing the Results","text":"","category":"section"},{"location":"","page":"DARPA-ASKEM Evaluation","title":"DARPA-ASKEM Evaluation","text":"This system is a fully reproducer builder that generates the results from scratch. It downloads Julia, downloads the packages, builds the results, and then hosts them at the website  https://chrisrackauckas.github.io/ASKEMEvaluationStaging/dev/.","category":"page"},{"location":"#Running-the-Builder","page":"DARPA-ASKEM Evaluation","title":"Running the Builder","text":"","category":"section"},{"location":"","page":"DARPA-ASKEM Evaluation","title":"DARPA-ASKEM Evaluation","text":"The simplest way to reproduce the results is to run the builder by opening a PR. The Documentation job is the job generating the results, and if successful (green) then its artifacts are pushed to the repository on merge.","category":"page"},{"location":"#Running-Locally-via-the-make.jl-Script","page":"DARPA-ASKEM Evaluation","title":"Running Locally via the make.jl Script","text":"","category":"section"},{"location":"","page":"DARPA-ASKEM Evaluation","title":"DARPA-ASKEM Evaluation","text":"To run locally, start by downloading the Github repository and set the current directory to  ASKEM_Evaluation_Staging/docs. Then open Julia and run:","category":"page"},{"location":"","page":"DARPA-ASKEM Evaluation","title":"DARPA-ASKEM Evaluation","text":"cd(\"to the ASKEM_Evaluation_Staging/docs directory\")\n\n# Setup packages\nusing Pkg\nPkg.activate(\".\") \nPkg.instantiate()\n\n# Run the build script\ninclude(\"make.jl\")","category":"page"},{"location":"","page":"DARPA-ASKEM Evaluation","title":"DARPA-ASKEM Evaluation","text":"The outputs will be generated into the ASKEM_Evaluation_Staging/docs/build directory and can be opened in  a web browser.","category":"page"},{"location":"#Running-Individual-Files","page":"DARPA-ASKEM Evaluation","title":"Running Individual Files","text":"","category":"section"},{"location":"","page":"DARPA-ASKEM Evaluation","title":"DARPA-ASKEM Evaluation","text":"The individual files can be built as well by running the code in the Markdown files. We recommend grabbing the packages using the Project.toml via:","category":"page"},{"location":"","page":"DARPA-ASKEM Evaluation","title":"DARPA-ASKEM Evaluation","text":"cd(\"to the ASKEM_Evaluation_Staging/docs directory\")\n\n# Setup packages\nusing Pkg\nPkg.activate(\".\") \nPkg.instantiate()","category":"page"},{"location":"","page":"DARPA-ASKEM Evaluation","title":"DARPA-ASKEM Evaluation","text":"Then open up the .md and run the code! If using the Julia VS Code plugin then inline evaluation will directly work.","category":"page"},{"location":"#Contributing","page":"DARPA-ASKEM Evaluation","title":"Contributing","text":"","category":"section"},{"location":"","page":"DARPA-ASKEM Evaluation","title":"DARPA-ASKEM Evaluation","text":"Please refer to the SciML ColPrac: Contributor's Guide on Collaborative Practices for Community Packages for guidance on PRs, issues, and other matters relating to contributing to SciML.\nSee the SciML Style Guide for common coding practices and other style decisions.\nThere are a few community forums:\nThe #diffeq-bridged and #sciml-bridged channels in the Julia Slack\nThe #diffeq-bridged and #sciml-bridged channels in the Julia Zulip\nOn the Julia Discourse forums\nSee also SciML Community page","category":"page"},{"location":"#Reproducibility","page":"DARPA-ASKEM Evaluation","title":"Reproducibility","text":"","category":"section"},{"location":"","page":"DARPA-ASKEM Evaluation","title":"DARPA-ASKEM Evaluation","text":"<details><summary>The documentation of this SciML package was built using these direct dependencies,</summary>","category":"page"},{"location":"","page":"DARPA-ASKEM Evaluation","title":"DARPA-ASKEM Evaluation","text":"using Pkg # hide\nPkg.status() # hide","category":"page"},{"location":"","page":"DARPA-ASKEM Evaluation","title":"DARPA-ASKEM Evaluation","text":"</details>","category":"page"},{"location":"","page":"DARPA-ASKEM Evaluation","title":"DARPA-ASKEM Evaluation","text":"<details><summary>and using this machine and Julia version.</summary>","category":"page"},{"location":"","page":"DARPA-ASKEM Evaluation","title":"DARPA-ASKEM Evaluation","text":"using InteractiveUtils # hide\nversioninfo() # hide","category":"page"},{"location":"","page":"DARPA-ASKEM Evaluation","title":"DARPA-ASKEM Evaluation","text":"</details>","category":"page"},{"location":"","page":"DARPA-ASKEM Evaluation","title":"DARPA-ASKEM Evaluation","text":"<details><summary>A more complete overview of all dependencies and their versions is also provided.</summary>","category":"page"},{"location":"","page":"DARPA-ASKEM Evaluation","title":"DARPA-ASKEM Evaluation","text":"using Pkg # hide\nPkg.status(; mode = PKGMODE_MANIFEST) # hide","category":"page"},{"location":"","page":"DARPA-ASKEM Evaluation","title":"DARPA-ASKEM Evaluation","text":"</details>","category":"page"},{"location":"","page":"DARPA-ASKEM Evaluation","title":"DARPA-ASKEM Evaluation","text":"You can also download the\n<a href=\"","category":"page"},{"location":"","page":"DARPA-ASKEM Evaluation","title":"DARPA-ASKEM Evaluation","text":"using TOML\nversion = TOML.parse(read(\"../../Project.toml\", String))[\"version\"]\nname = TOML.parse(read(\"../../Project.toml\", String))[\"name\"]\nlink = \"https://github.com/SciML/\" * name * \".jl/tree/gh-pages/v\" * version *\n       \"/assets/Manifest.toml\"","category":"page"},{"location":"","page":"DARPA-ASKEM Evaluation","title":"DARPA-ASKEM Evaluation","text":"\">manifest</a> file and the\n<a href=\"","category":"page"},{"location":"","page":"DARPA-ASKEM Evaluation","title":"DARPA-ASKEM Evaluation","text":"using TOML\nversion = TOML.parse(read(\"../../Project.toml\", String))[\"version\"]\nname = TOML.parse(read(\"../../Project.toml\", String))[\"name\"]\nlink = \"https://github.com/SciML/\" * name * \".jl/tree/gh-pages/v\" * version *\n       \"/assets/Project.toml\"","category":"page"},{"location":"","page":"DARPA-ASKEM Evaluation","title":"DARPA-ASKEM Evaluation","text":"\">project</a> file.","category":"page"}]
}
